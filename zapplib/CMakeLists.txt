set(ZAPPLIB_STATIC_LIB_NAME zapplib)
set(ZAPPLIB_INCLUDE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include)
set(ZAPPLIB_SOURCE_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/src)

file(GLOB_RECURSE ZAPPLIB_HEADER_FILES
  "${ZAPPLIB_INCLUDE_DIRECTORY}/*.h")

file(GLOB_RECURSE ZAPPLIB_SOURCE_FILES
  "${ZAPPLIB_SOURCE_DIRECTORY}/*.cpp"
  "${ZAPPLIB_SOURCE_DIRECTORY}/*.h")

source_group(TREE "${ZAPPLIB_INCLUDE_DIRECTORY}"
  PREFIX include
  FILES ${ZAPPLIB_HEADER_FILES})

source_group(TREE ${ZAPPLIB_SOURCE_DIRECTORY}
  PREFIX src
  FILES ${ZAPPLIB_SOURCE_FILES})

add_library(${ZAPPLIB_STATIC_LIB_NAME} STATIC
  ${ZAPPLIB_HEADER_FILES}
  ${ZAPPLIB_SOURCE_FILES})

set_target_properties(${ZAPPLIB_STATIC_LIB_NAME} PROPERTIES
  FOLDER zs
  XCODE_GENERATE_SCHEME NO)

target_include_directories(${ZAPPLIB_STATIC_LIB_NAME}
  PUBLIC
  ${ZAPPLIB_INCLUDE_DIRECTORY}
  PRIVATE
  ${ZSCRIPT_SOURCE_DIRECTORY})

  target_link_libraries(${ZAPPLIB_STATIC_LIB_NAME} PUBLIC zscript)

set_target_properties(${ZAPPLIB_STATIC_LIB_NAME} PROPERTIES
  ARCHIVE_OUTPUT_DIRECTORY "${ZSCRIPT_BIN_DIRECTORY}"
  ARCHIVE_OUTPUT_DIRECTORY_DEBUG "${ZSCRIPT_BIN_DIRECTORY}"
  ARCHIVE_OUTPUT_DIRECTORY_RELEASE "${ZSCRIPT_BIN_DIRECTORY}"
  OUTPUT_NAME "zapplib"
)

# Tests.
add_subdirectory(${CMAKE_CURRENT_SOURCE_DIR}/tests)
